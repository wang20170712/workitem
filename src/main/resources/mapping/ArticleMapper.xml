<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lin.workitem.mapper.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.lin.workitem.model.Article" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="classify" property="classify" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="key" property="key" jdbcType="VARCHAR" />
    <result column="abstract" property="abstract" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="source" property="source" jdbcType="VARCHAR" />
    <result column="allowreply" property="allowreply" jdbcType="TINYINT" />
    <result column="reply_startTime" property="replyStarttime" jdbcType="TIMESTAMP" />
    <result column="reply_endTime" property="replyEndtime" jdbcType="TIMESTAMP" />
    <result column="delete_status" property="deleteStatus" jdbcType="TINYINT" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.lin.workitem.model.Article" extends="BaseResultMap" >
    <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, classify, type, sort, key, abstract, author, source, allowreply, reply_startTime, 
    reply_endTime, delete_status, createTime, updateTime
  </sql>
  <sql id="Blob_Column_List" >
    article_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lin.workitem.model.Article" >
    insert into article (id, title, classify, 
      type, sort, key, abstract, 
      author, source, allowreply, 
      reply_startTime, reply_endTime, delete_status, 
      createTime, updateTime, article_content
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{classify,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, #{key,jdbcType=VARCHAR}, #{abstract,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, #{allowreply,jdbcType=TINYINT}, 
      #{replyStarttime,jdbcType=TIMESTAMP}, #{replyEndtime,jdbcType=TIMESTAMP}, #{deleteStatus,jdbcType=TINYINT}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, #{articleContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lin.workitem.model.Article" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="classify != null" >
        classify,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="key != null" >
        key,
      </if>
      <if test="abstract != null" >
        abstract,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="allowreply != null" >
        allowreply,
      </if>
      <if test="replyStarttime != null" >
        reply_startTime,
      </if>
      <if test="replyEndtime != null" >
        reply_endTime,
      </if>
      <if test="deleteStatus != null" >
        delete_status,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
      <if test="articleContent != null" >
        article_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="classify != null" >
        #{classify,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="key != null" >
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="abstract != null" >
        #{abstract,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="allowreply != null" >
        #{allowreply,jdbcType=TINYINT},
      </if>
      <if test="replyStarttime != null" >
        #{replyStarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="replyEndtime != null" >
        #{replyEndtime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null" >
        #{deleteStatus,jdbcType=TINYINT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleContent != null" >
        #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lin.workitem.model.Article" >
    update article
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="classify != null" >
        classify = #{classify,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="key != null" >
        key = #{key,jdbcType=VARCHAR},
      </if>
      <if test="abstract != null" >
        abstract = #{abstract,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="allowreply != null" >
        allowreply = #{allowreply,jdbcType=TINYINT},
      </if>
      <if test="replyStarttime != null" >
        reply_startTime = #{replyStarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="replyEndtime != null" >
        reply_endTime = #{replyEndtime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteStatus != null" >
        delete_status = #{deleteStatus,jdbcType=TINYINT},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="articleContent != null" >
        article_content = #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.lin.workitem.model.Article" >
    update article
    set title = #{title,jdbcType=VARCHAR},
      classify = #{classify,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      key = #{key,jdbcType=VARCHAR},
      abstract = #{abstract,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      allowreply = #{allowreply,jdbcType=TINYINT},
      reply_startTime = #{replyStarttime,jdbcType=TIMESTAMP},
      reply_endTime = #{replyEndtime,jdbcType=TIMESTAMP},
      delete_status = #{deleteStatus,jdbcType=TINYINT},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP},
      article_content = #{articleContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lin.workitem.model.Article" >
    update article
    set title = #{title,jdbcType=VARCHAR},
      classify = #{classify,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      key = #{key,jdbcType=VARCHAR},
      abstract = #{abstract,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      allowreply = #{allowreply,jdbcType=TINYINT},
      reply_startTime = #{replyStarttime,jdbcType=TIMESTAMP},
      reply_endTime = #{replyEndtime,jdbcType=TIMESTAMP},
      delete_status = #{deleteStatus,jdbcType=TINYINT},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>